@model LineBalancing.ViewModels.VMPlant

@{
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
    ViewBag.Title = "Master Data Plant";

    if (Model == null || Model.CurrentUser == null)
    {
        <script type="text/javascript">
            window.location.href = "@Url.Action("Login", "Account")";
        </script>

        return;
    }

    bool isWindowsAuthentication = Model.CurrentUser.IsWindowsAuthentication;
    bool isAdmin = Model.CurrentUser.IsAdmin;
    string userName = Model.CurrentUser.Username;
}

@if (!Request.IsAuthenticated || Session["Login"] == null)
{
    <script type="text/javascript">
        window.location.href = "@Url.Action("Login","Account")";
    </script>

    return;
}

<style>
    html, body {
        height: 100%;
    }

    body {
        background: #ffffff;
    }
</style>



<div class="l-box__list">
    <div class="setDelay hideCont">
        <button type="button" class="btn-back-homes-corner " data-dismiss="modal" onclick="window.location='@Url.Action("Index", "MainMenu")'"><i class="fas fa-home"></i> </button>

        <div class="h-text--title-box-form-v1">List Master Data Plant</div>
        <div class="solid-line-width"></div>

        <div class="margin-t-50  md-margin-t-30 sm-margin-t-20 margin-b-40 md-margin-b-20 ">
            @Html.TextBox("Search", null, new { @class = "c-form__input form-control", @placeholder = "Search Plant", @id = "searchText" })
        </div>

        @* List Item *@
        <div class="row">

            <div id="dataNotFound" class="font-size-16 text-center"></div>

            <div id="list" class="overflow-y-box-list">
                @{ Html.RenderAction("Scroll", new { startIndex = 0 }); }
            </div>

        </div>
    </div>
</div>


@if (isAdmin)
{
    @* Floating Action Button*@
    <div class="setDelay hideCont">
        <button type="button" class="c-fab__main"><i class="fas fa-plus"></i></button>
        <div class="c-fab__box-item">

            <div>
                <label class="c-fab__lbl-item c-fab__lbl-item-one">Add Data</label>
                <div class="c-fab__item c-fab__item-one" id="add">
                    <img src="~/Images/ic_adddata.png" />
                </div>
            </div>

            <div>
                <label class="c-fab__lbl-item c-fab__lbl-item-two">Export File</label>
                <div class="c-fab__item c-fab__item-two" id="export">
                    <img src="~/Images/ic_export.png" />
                </div>
            </div>

            <div>
                <label class="c-fab__lbl-item c-fab__lbl-item-three">Import File</label>
                <div class="c-fab__item c-fab__item-three" id="import">
                    <img src="~/Images/ic_import.png" />
                </div>
            </div>

        </div>
    </div>
}


<!-- Modal Add & Edit Data -->
<div id="AddEditModal" class="modal fade overflow-h setDelay hideCont" role="dialog" data-backdrop="static">
    <div class="modal-dialog position-c-object xs-modal-dialog">

        <button type="button" class="close c-custom-modal__close-corner-overlap " data-dismiss="modal" id="closeAddEditModal"><i class="fas fa-times"></i> </button>

        <div class="modal-content">
            <div class="modal-body">

                <div class="h-text--title-box-form-v1"><label id="modalTitle">Add Master Data Plant</label></div>
                <div class="solid-line-width"></div>

                <label id="createdTime" hidden="hidden"></label>
                <label id="createdUser" hidden="hidden"></label>

                <div class="margin-t-40">
                    <label class="h-text--lbl-form">Plant Code</label>
                    @Html.TextBoxFor(model => model.Plant.PlantCode, null, new { @class = "c-form__input form-control", @id = "plantCode" })
                </div>

                <div class="margin-t-20">
                    <label class="h-text--lbl-form">Refered to</label>
                    @Html.TextBoxFor(model => model.Plant.PlantDescription, null, new { @class = "c-form__input form-control", @id = "plantDescription" })
                </div>

                <div class="margin-t-20">
                    <label class="c-login__container-checkbox">
                        Active
                        @Html.CheckBoxFor(model => model.Plant.Active, new { @id = "active" })
                        <span class="c-login__checkmark"></span>
                    </label>
                </div>

                <input type="submit" class="btn-oranges" id="save" value="SAVE" />

            </div>
        </div>

    </div>
</div>


<div id="DeleteModal" class="modal fade setDelay hideCont" role="dialog" data-backdrop="static">
    <div class="modal-dialog position-c-object xs-modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body padding-40">

                <button type="button" class="close c-custom-modal__close-corner-overlap" data-dismiss="modal" id="closeDeleteModal"><i class="fas fa-times"></i> </button>

                <div class="h-text--confirmation-modal">
                    Are you sure want to delete this data ?
                </div>

                <button type="button" class="btn-confirmation-delete margin-t-30" id="delete">Yes</button>

            </div>
        </div>

    </div>
</div>


<!-- Modal Import -->
<div id="ImportModal" class="modal fade setDelay hideCont" role="dialog" data-backdrop="static">
    <div class="modal-dialog position-c-object xs-modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">

                <button type="button" class="close c-custom-modal__close-corner-overlap" data-dismiss="modal" id="closeImportModal"><i class="fas fa-times"></i> </button>

                <div>
                    <label for="fileImport" class="c-import-upload__box-v1">
                        <span class="display-block">
                            <i class="fas fa-upload"></i>
                        </span>
                        <span class="display-block">
                            <p class="c-import-upload__file-name file-name"></p>
                        </span>

                        <span class="font-size-14 text-center display-block color-base">Upload file with extension .xlsx or .xls</span>
                    </label>
                </div>

                <div class="display-none">
                    <input type="file" id="fileImport" name="file" accept=".xlsx, .xls" />
                </div>

                <div class="margin-t-10 text-center">
                    <button type=button id="downloadTemplate" class="font-size-15 color-base-green fweight-600 btn-link">Click to Download Template</button>
                </div>
                <div class="margin-t-60">
                    <input type="submit" value="Import File" class="btn-import-file" id="upload" />
                </div>

                <div class="margin-t-10">
                    <button type=button id="resetFileImport" class="btn-link btn-reset-file cursor-pointer">Reset Import</button>
                </div>

            </div>
        </div>

    </div>
</div>


<div id="NotificationModal" class="modal fade setDelay hideCont" role="dialog" data-backdrop="static">
    <div class="modal-dialog top-10pc">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">

                <button type="button" class="close c-custom-modal__close-corner-overlap" data-dismiss="modal" id="closeNotificationModal"><i class="fas fa-times"></i> </button>

                <img src="~/Images/ic_successmodal.png" class="img-responsive position-c width-60pc" id="success" />
                <img src="~/Images/ic_failedmodal.png" class="img-responsive position-c width-60pc" id="fail" />

                <div class="h-text--title-modal-status margin-t-40">
                    <label id="notificationMessage"></label>
                </div>

                <button type="button" class="btn-close-modal margin-b-10" data-dismiss="modal" id="closeNotification">CLOSE</button>
                <button type="button" class="btn-close-modal margin-b-10" data-dismiss="modal" id="buttonContinue">CONTINUE</button>

            </div>
        </div>

    </div>
</div>


<img src="~/Images/bottom-shape.png" class="shape-bottom-content" />


<script type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    var start = 10;
    var url = '@Url.Action("Scroll", "Plants")';
    var list = $('#list');

    var currentPlant = "";

    function loadData()
    {
        $('#list').html('');

        var url = "/Plants/Scroll/"
        $.get(url, { startIndex: 0 }, function (response) {
            if (response != "")
            {
                list.append(response);

                if (start === 0) {
                    start += 10; // increment for next call
                }
                else {
                    start = 10; // reset to default value
                }
            }
        });
    }


    // Searching
    var delayTimer;
    $('#searchText').bind('input', function ()
    {
        $('#list').html('');

        clearTimeout(delayTimer);
        delayTimer = setTimeout(function () {
            var search = $('#searchText').val();
            if (search.length > 0) {
                $.get(url, { startIndex: 0, searchFor: search }, function (response) {
                    if (response.Message != null) {
                        $('#dataNotFound').show();
                        $('#dataNotFound').text(response.Message);
                    }
                    else {
                        $('#dataNotFound').hide();

                        list.append(response);
                        start += 10; // increment for next call
                    }
                });
            }
            else {
                $.get(url, { startIndex: 0 }, function (response) {
                    if (response.Message != null) {
                        $('#dataNotFound').show();
                        $('#dataNotFound').text(response.Message);
                    }
                    else {
                        $('#dataNotFound').hide();

                        list.append(response);
                        start += 10; // increment for next call
                    }
                });
            }
        }, 1000); // Will do the ajax stuff after 1000 ms, or 1 s
    });

    // Infinite scroll
    $("#list").scroll(function ()
    {
        var clientHeight = document.getElementById('list').clientHeight;
        var scrollHeight = document.getElementById('list').scrollHeight;
        var scrollTop = document.getElementById('list').scrollTop;

        if (scrollHeight - Math.floor(scrollTop) === clientHeight)
        {
            var url = "/Plants/Scroll/"
            $.get(url, { startIndex: start }, function (response)
            {
                if (response != "")
                {
                    list.append(response);
                    start += 10; // increment for next call
                }
            });
        }
    });

    $("#add").click(function () {

        $('#AddEditModal').modal('show');

        $("#modalTitle").text('Add Master Data Plant');

        $("#createdTime").text('');
        $("#createdUser").text('');

        $("#plantCode").val('');
        $("#plantDescription").val('');
        $('#active').prop('checked', false);

        $(".c-fab__box-item").hide();
    });

    // Save / Update
    $("#save").on("click", function () {

        var createdTime = $("#createdTime").text();
        var createdUser = $("#createdUser").text();

        var plantCode = $('#plantCode').val();
        var plantDescription = $('#plantDescription').val();

        if (plantCode === '') {
            $('#AddEditModal').addClass('opacity-0');

            $('#NotificationModal').modal('show');
            $('#success').hide();
            $('#fail').show();
            $('#notificationMessage').text("Please fill plant !");
            $('#closeNotification').show();
            $('#buttonContinue').hide();

            return;
        }

        if (plantDescription === '') {
            $('#AddEditModal').addClass('opacity-0');

            $('#NotificationModal').modal('show');
            $('#success').hide();
            $('#fail').show();
            $('#notificationMessage').text("Please fill description !");
            $('#closeNotification').show();
            $('#buttonContinue').hide();

            return;
        }

        var active = $("#active").prop("checked");

        var createNewPlant = $("#modalTitle").text();
        if (createNewPlant === 'Add Master Data Plant')
        {
            // Parse new value for creating data
            var plant =
            {
                PlantCode: plantCode,
                PlantDescription: plantDescription,
                Active: active
            }

            // console.log("save", plant);

            // Call server
            var url = "/Plants/Create";
            $.post(url, plant, function (response)
            {
                if (response.Message != null) {
                    $('#AddEditModal').addClass('opacity-0');

                    $('#NotificationModal').modal('show');
                    $('#success').hide();
                    $('#fail').show();
                    $('#notificationMessage').text(response.Message);
                    $('#closeNotification').show();
                    $('#buttonContinue').hide();

                    return;
                }

                $('#AddEditModal').modal('hide');
                loadData();
            });
        }
        else
        {
            // Override created time format
            var createdTime = new Date(parseInt(createdTime)).toJSON();

            // Parse new value for creating data
            var plant =
            {
                PlantCode: plantCode,
                PlantDescription: plantDescription,
                Active: active,
                CreatedTime: createdTime,
                CreatedUser: createdUser
            }

            // console.log("update", plant);

            // Call server
            var url = "/Plants/Edit?currentPlant=" + currentPlant;
            $.post(url, plant, function (response)
            {
                if (response.Message != null) {
                    $('#AddEditModal').addClass('opacity-0');

                    $('#NotificationModal').modal('show');
                    $('#success').hide();
                    $('#fail').show();
                    $('#notificationMessage').text(response.Message);
                    $('#closeNotification').show();
                    $('#buttonContinue').hide();

                    return;
                }

                $('#AddEditModal').modal('hide');
                loadData();
            });
        }
    });

    // Get data then show pop up
    $(document).on("click", "#btnEditCorner", function (e)
    {
        e.preventDefault();

        $('#AddEditModal').modal('show');

        currentPlant = $(this).attr("data-id");

        // Change modal title
        if (currentPlant != '') {
            $("#modalTitle").text("Update Master Data Plant");
        }

        var url = "/Plants/Edit?plantCode=" + currentPlant;
        $.get(url, function (response)
        {
            hasRelationalData = response.Plant.HasRelationalData;

            // Format date time
            if (response.Plant.CreatedTime != null) {
                var replaceString = /-?\d+/;
                var replacedDate = replaceString.exec(response.Plant.CreatedTime);
                var createdTime = parseInt(replacedDate[0], 10);

                $("#createdTime").text(createdTime);
            }

            // Set value into properties
            $("#createdUser").text(response.Plant.CreatedUser);

            $("#plantCode").val(response.Plant.PlantCode);
            $("#plantDescription").val(response.Plant.PlantDescription);
            $('#active').prop('checked', response.Plant.Active);
        });
    });

    // Delete
    $("#delete").on("click", function () {

        // Call server
        var url = "/Plants/Delete?currentPlant=" + currentPlant;
        $.post(url, function (response)
        {
            if (response.Message != null) {
                $('#AddEditModal').addClass('opacity-0');

                $('#NotificationModal').modal('show');
                $('#success').hide();
                $('#fail').show();
                $('#notificationMessage').text(response.Message);
                $('#closeNotification').show();
                $('#buttonContinue').hide();

                return;
            }

            $('#DeleteModal').modal('hide');
            loadData();
        });
    });

    // Show delete pop up
    $(document).on("click", "#btnDeleteCorner", function (e) {
        e.preventDefault();

        currentPlant = $(this).attr("data-id");

        var url = "/Plants/Edit?plantCode=" + currentPlant;
        $.get(url, function (response)
        {
            // console.log("Relational data", response.HasRelationalData);

            var hasRelationalData = response.HasRelationalData;
            if (hasRelationalData) {
                $('#NotificationModal').modal('show');
                $('#success').hide();
                $('#fail').hide();
                $('#notificationMessage').html("<div><span class='color-red text-uppercase display-block margin-b-20 font-size-30'>Warning!</span><span class='font-size-18'>This data is relational data, are you sure want to continue ?</span></div>");
                $('#closeNotification').hide();
                $('#buttonContinue').show().addClass('font-size-20 width-35pc padding-10 margin-b-20');
            }
            else {
                $('#DeleteModal').modal('show');
            }
        });
    });

    // Import data
    $("#import").on("click", function () {
        $('#ImportModal').modal('show');
    });

    // Upload data
    $("#upload").on("click", function () {

        var data = new FormData();
        data.append('file', $('#fileImport').prop('files')[0]);

        $.ajax({
            type: "POST",
            url: '/Plants/Import',
            contentType: false,
            processData: false,
            data: data,
            success: function (response)
            {
                if (response.Message != null)
                {
                    $('#ImportModal').addClass('opacity-0');

                    $('#NotificationModal').modal('show');
                    $('#success').hide();
                    $('#fail').show();
                    $('#notificationMessage').text(response.Message);
                    $('#closeNotification').show();
                    $('#buttonContinue').hide();

                    return;
                }

                $('#ImportModal').modal('hide');
                loadData();

                // This function is set on app.js
                resetUpload();
            }
        });
    });

    // Export data
    $("#export").on("click", function () {
        window.open("/Plants/Export/", "_self");

        $('#NotificationModal').modal('show');
        $('#success').show();
        $('#fail').hide();
        $('#notificationMessage').text("Export success !");
        $('#closeNotification').show();
        $('#buttonContinue').hide();

    });

    // Download template
    $("#downloadTemplate").on("click", function () {
        window.open("/Plants/Template/", "_self");
    });

</script>